#!/usr/bin/bash
#===============================================================================
# Git Hook - Post Receive
#===============================================================================
# This Bash script controls the actions of a webhook server. This particular
# hook takes action *after* receiving a push.  When you push to a central
# repository, this server can taking any addtional action possible on a Linux machine.

# CoreOS Re-Deploy Example
# (1) Perform a clone of the bare** repo we just pushed to, creating a regular repo.
# (2) Use the *.service files in the regular repo to re-deploy CoreOS services.
#  ** A bare repo has the repository commit history, but no working tree (the actual files).

echo ""
echo "==================================="
echo "Push Detected. Activating Githook."
echo "==================================="

echo ""
echo "-----------"
echo "Cloning Bare Repo"
echo "-----------"
# Cloning the (freshly updated) bare repo creates a regular one with files we can use.
# First, wipe away any old versions of the regular repo.
cd ..
rm -rf coreos-reflector
/usr/bin/git clone coreos-reflector.git coreos-reflector
cd coreos-reflector


echo ""
echo "-----------"
echo "Stopping Service: CoreOS Reflector Demo"
echo "-----------"
/usr/bin/fleetctl --tunnel coreos.pandastrike.com destroy reflector@02.service

# It sometimes takes the CoreOS cluster a moment to register your command.  If
# we wait a few seconds, the service will properly begin the termination sequence
# before registering the following "start" command.
sleep 5

echo ""
echo "-----------"
echo "Restarting Service: CoreOS Reflector Demo"
echo "-----------"
/usr/bin/fleetctl --tunnel coreos.pandastrike.com start reflector@02.service
/usr/bin/fleetctl --tunnel coreos.pandastrike.com journal -f reflector@02.service
